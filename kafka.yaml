apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: my-otel-demo
    meta.helm.sh/release-namespace: otel-demo
  creationTimestamp: "2023-09-06T13:18:28Z"
  generation: 1
  labels:
    tags.datadoghq.com/env: otel-demo
    tags.datadoghq.com/service: kafka
    tags.datadoghq.com/version: 1.4.0    
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: my-otel-demo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: my-otel-demo-kafka
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/version: 1.4.0
    helm.sh/chart: opentelemetry-demo-0.23.0
    opentelemetry.io/name: my-otel-demo-kafka
  name: my-otel-demo-kafka
  namespace: otel-demo
  resourceVersion: "27294176"
  uid: 578fbe6c-ce7e-4192-83a5-9b24fe49b816
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      opentelemetry.io/name: my-otel-demo-kafka
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        tags.datadoghq.com/env: otel-demo
        tags.datadoghq.com/service: kafka
        tags.datadoghq.com/version: 1.4.0       
        app.kubernetes.io/component: kafka
        app.kubernetes.io/instance: my-otel-demo
        app.kubernetes.io/name: my-otel-demo-kafka
        opentelemetry.io/name: my-otel-demo-kafka
    spec:
      containers:
      - env:
        - name: OTEL_SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['app.kubernetes.io/component']
        - name: OTEL_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OTEL_K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: OTEL_K8S_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OTEL_K8S_POD_UID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTEL_COLLECTOR_NAME
          value: my-otel-demo-otelcol
        - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
          value: cumulative
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://my-otel-demo-kafka:9092
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://$(HOST_IP):4317
        - name: KAFKA_HEAP_OPTS
          value: -Xmx200M -Xms200M
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: service.name=$(OTEL_SERVICE_NAME),service.instance.id=$(OTEL_K8S_POD_UID),service.namespace=opentelemetry-demo,k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME),deployment.environment=otel-demo,service.version=1.4.0
        image: ghcr.io/open-telemetry/demo:1.4.0-kafka
        imagePullPolicy: IfNotPresent
        name: kafka
        ports:
        - containerPort: 9092
          name: plaintext
          protocol: TCP
        - containerPort: 9093
          name: controller
          protocol: TCP
        resources:
          limits:
            memory: 500Mi
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: my-otel-demo
      serviceAccountName: my-otel-demo
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2023-09-06T13:18:33Z"
    lastUpdateTime: "2023-09-06T13:18:33Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2023-09-06T13:18:30Z"
    lastUpdateTime: "2023-09-06T13:18:33Z"
    message: ReplicaSet "my-otel-demo-kafka-6cf57b7f77" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
